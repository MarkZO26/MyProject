#include <iostream>
using namespace std;

int main(){
    int arr[7][2] = {{6, 100}, {5, 90}, {1, 250}, {7, 90}, {5, 70}, {1, 60}, {4, 50}};
    int rows = 7, i, j, temp[2];

    i = 0;
    cout << "Job Queue in Array" << endl;
    while (i < rows){
        j = 0;
        cout << "JQ" << i + 1 << " D: " << arr[i][0] << " P: " << arr[i][1] << endl;
        i++;
    }

    for (i = 0; i < rows; i++){
        for (j = 0; j < rows - 1; j++){
            if (arr[j][1] <= arr[j + 1][1]){
                temp[0] = arr[j][0];
                temp[1] = arr[j][1];
                arr[j][0] = arr[j + 1][0];
                arr[j][1] = arr[j + 1][1];
                arr[j + 1][0] = temp[0];
                arr[j + 1][1] = temp[1];
            }
        }
    }

    i = 0;
    cout << "\nJob Queue in Sorted Array" << endl;
    while (i < rows){
        j = 0;
        cout << "JQ" << i + 1 << " D: " << arr[i][0] << " P: " << arr[i][1] << endl;
        i++;
    }

    int queue[7][2];
    cout << "\nJob Queue to be Processed" << endl;
    i = 0;
    while (i < rows){
        j = 0;
        while (j < rows){
            if (arr[i][0] == i + 1){
                queue[i][0] = arr[i][0];
                queue[i][1] = arr[i][1];
                j++;
            }
            else if (arr[i][0] != i + 1){
                int num = arr[j][0];
                if (arr[i][1] > queue[j][1]){
                    queue[num - 1][0] = arr[j][0];
                    queue[num - 1][1] = arr[j][1];
                }
                j++;
            }
        }
        i++;
    }

    i = 0;
    while (i < rows){
        j = 0;
        if (queue[i][0] == 0 && queue[i][1] == 0){
            cout << "JQ" << i + 1 << " NULL" << endl;
        }
        else{
            cout << "JQ" << i + 1 << " D: " << queue[i][0] << " P: " << queue[i][1] << endl;
        }
        i++;
    }
    return 0;
}
